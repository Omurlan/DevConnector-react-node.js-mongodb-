{"version":3,"sources":["components/layout/Landing.jsx","utills/setAuthToken.js","actions/types.js","actions/alert.js","actions/auth.js","components/layout/Navbar.jsx","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/layout/Alert.jsx","actions/profile.js","components/layout/spinner.gif","components/layout/Spinner.jsx","components/dashboard/DashboardActions.jsx","components/dashboard/Experience.jsx","components/dashboard/Education.jsx","components/dashboard/Dashboard.jsx","routing/PrivateRoute.js","components/auth/Register.jsx","components/auth/Login.jsx","components/profiles/ProfileItem.jsx","components/profiles/Profiles.jsx","components/profile/ProfileTop.jsx","components/profile/ProfileAbout.jsx","components/profile/ProfileExperience.jsx","components/profile/ProfileEducation.jsx","components/profile/ProfileGithub.jsx","components/profile/Profile.jsx","components/profile-form/CreateProfile.jsx","components/profile-form/EditProfile.jsx","components/profile-form/AddExperience.jsx","components/profile-form/AddEducation.jsx","components/posts/PostItem.jsx","actions/post.js","components/posts/PostForm.jsx","components/posts/Posts.jsx","components/post/CommentForm.jsx","components/post/CommentItem.jsx","components/post/Post.jsx","components/layout/NotFound.jsx","routing/Routes.js","App.js","index.js"],"names":["connect","state","isAuthenticated","auth","to","className","setAuthToken","token","axios","defaults","headers","common","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","LOGIN_SUCCESS","LOGIN_FAIL","AUTH_ERROR","LOGOUT","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_PROFILES","GET_REPOS","GET_POSTS","POST_ERROR","ADD_POST","UPDATE_LIKES","DELETE_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","loadUser","a","localStorage","get","res","data","logout","loading","authLinks","onClick","guestLinks","initialState","inititalState","getItem","user","profile","profiles","repos","error","posts","post","combineReducers","alert","action","console","log","filter","setItem","removeItem","_id","map","likes","comments","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","alerts","length","getCurrentProfile","response","statusText","status","createProfile","formData","history","edit","config","push","errors","forEach","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","exp","aria-label","company","title","format","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","name","Component","component","rest","render","props","register","email","password","body","JSON","stringify","useState","password2","setFormData","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","placeholder","onChange","login","minLength","ProfileItem","avatar","location","skills","slice","skill","index","getProfiles","ProfileTop","website","social","href","rel","twitter","facebook","linkedin","youtube","instagram","ProfileAbout","bio","trim","split","ProfileExperience","description","ProfileEducation","fieldofstudy","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","githubusername","withRouter","displaySocialInputs","toggleSocialInputs","join","addExperience","put","current","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","addEducation","PostItem","addLike","removeLike","deletePost","text","date","showActions","defaultProps","addPost","setText","class","getPosts","addComment","postId","deleteComment","commentId","getPost","NotFound","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2bba3893.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n                <div className=\"landing-inner\">\r\n                    <h1 className=\"x-large\">Developer Connector</h1>\r\n                    <p className=\"lead\">\r\n                        Create a developer profile/portfolio, share posts and get help from\r\n                        other developers\r\n                    </p>\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n                        <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default setAuthToken","export const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\nexport const USER_LOADED = 'USER_LOADED'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const GET_PROFILE = 'GET_PROFILE'\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR'\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE'\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED'\r\nexport const GET_PROFILES = 'GET_PROFILES'\r\nexport const GET_REPOS = 'GET_REPOS'\r\nexport const GET_POSTS = 'GET_POSTS'\r\nexport const POST_ERROR = 'POST_ERROR'\r\nexport const ADD_POST = 'ADD_POST'\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES'\r\nexport const DELETE_POST = 'DELETE_POST'\r\nexport const GET_POST = 'GET_POST'\r\nexport const ADD_COMMENT = 'ADD_COMMENT'\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'","import { SET_ALERT, REMOVE_ALERT } from './types'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n    const id = uuid()\r\n    dispatch({\r\n        type: SET_ALERT,\r\n        payload: { msg, alertType, id }\r\n    })\r\n\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\r\n}","import axios from 'axios'\r\nimport setAuthToken from '../utills/setAuthToken'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types'\r\n\r\n// Load User\r\nexport const loadUser = () => async dispatch => {\r\n    if (localStorage.token) {\r\n        setAuthToken(localStorage.token)\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('/api/auth')\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config)\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n// Login User\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password })\r\n\r\n    try {\r\n        const res = await axios.post('/api/auth', body, config)\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(loadUser())\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n}\r\n\r\n// logout /Clear Profile\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    })\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    })\r\n}","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n    const authLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/profiles\"> Delelopers </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/posts\"> Posts </Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/dashboard\">\r\n                    <i className=\"fas fa-user\">{' '}</i>\r\n                    <span className=\"hide-sm\"> Dashboard</span>\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <a onClick={logout} to=\"/profiles\">\r\n                    <i className=\"fas fa-sign-out-alt\">{' '}</i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    const guestLinks = (\r\n        <ul>\r\n            <li>\r\n                <Link to=\"/profiles\">Delelopers</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n                <Link to=\"/login\">Login</Link>\r\n            </li>\r\n        </ul>\r\n    )\r\n\r\n    return (\r\n        <nav className=\"navbar bg-dark\">\r\n            <h1>\r\n                <Link to=\"/\"><i className=\"fas fa-code\"></i> DevConnector</Link>\r\n            </h1>\r\n            { !loading && (\r\n                <Fragment>\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </Fragment>\r\n            )}\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)\r\n","import { REMOVE_ALERT, SET_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = []\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case SET_ALERT:\r\n            return [...state, payload]\r\n        case REMOVE_ALERT:\r\n            console.log(state.filter(alert => alert.id))\r\n            console.log(payload)\r\n            return state.filter(alert => alert.id !== payload)\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n    USER_LOADED,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    AUTH_ERROR,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types'\r\n\r\nconst inititalState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function (state = inititalState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            }\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token')\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS\r\n} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case GET_REPOS:\r\n            return {\r\n                ...state,\r\n                repos: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: null,\r\n                repos: [],\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES } from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { payload, type } = action\r\n    switch (type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [payload, ...state.posts],\r\n                loading: false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post._id !== payload),\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(post =>\r\n                    post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                    ...state.post,\r\n                    comments: state.post.comments.filter(comment => comment._id !== payload)\r\n                },\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport alert from './alert'\r\nimport auth from './auth'\r\nimport profile from './profile'\r\nimport post from './post'\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Alert = ({ alerts }) => {\r\n\r\n    return alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n        <div\r\n            key={alert.id}\r\n            className={`alert alert-${alert.alertType}`}\r\n        >\r\n            {alert.msg}\r\n        </div>\r\n    ))\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n})\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(Alert)\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport {\r\n    ACCOUNT_DELETED,\r\n    CLEAR_PROFILE,\r\n    GET_PROFILES,\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    GET_REPOS\r\n} from './types'\r\n\r\n// Get current users profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile/me')\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE })\r\n\r\n    try {\r\n        const res = await axios.get('/api/profile')\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Get profile by ID\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${username}`)\r\n\r\n        dispatch({\r\n            type: GET_REPOS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Create or update profile\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config)\r\n\r\n        console.log('ress', res)\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert(edit ? 'Profile updated' : 'Profile Created', 'success'))\r\n\r\n        history.push('/dashboard')\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Experience Added', 'success'))\r\n\r\n        history.push('/dashboard')\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/education', formData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n        dispatch(setAlert('Education Added', 'success'))\r\n\r\n        history.push('/dashboard')\r\n    } catch (err) {\r\n        const errors = err.response.data.errors\r\n\r\n        if (errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n        }\r\n\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Experience removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Education removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if (window.confirm('Are you sure ? This can NOT be undone')) {\r\n        try {\r\n            await axios.delete('/api/profile')\r\n\r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            })\r\n\r\n            dispatch({\r\n                type: ACCOUNT_DELETED\r\n            })\r\n\r\n            dispatch(setAlert('Your account has been permanantly deleted', 'success'))\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n}","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React, { Fragment } from 'react'\r\nimport spinner from './spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <Fragment>\r\n            <img\r\n                src={spinner}\r\n                style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n                alt='Loading...'\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"dash-buttons\">\r\n                <Link to=\"/edit-profile\" className=\"btn btn-light mb-1\">\r\n                    <i className=\"fas fa-user-circle text-primary\" />\r\n                    {'  '} &nbsp; Edit Profile\r\n                </Link>\r\n\r\n                <Link to=\"/add-experience\" className=\"btn btn-light mb-1\">\r\n                    <i className=\"fab fa-black-tie text-primary\" />\r\n                    {'  '} &nbsp; Add Experience\r\n                </Link>\r\n\r\n                <Link to=\"/add-education\" className=\"btn btn-light mb-1\">\r\n                    <i className=\"fas fa-graduation-cap text-primary\" />\r\n                    {'  '} &nbsp; Add Education\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardActions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport { Fragment } from 'react'\r\nimport { deleteExperience, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp._id}>\r\n            <td aria-label=\"Company\">{exp.company}</td>\r\n            <td aria-label=\"Position\">{exp.title}</td>\r\n            <td aria-label=\"Years\">\r\n                <Moment format='YYYY/MM/DD'>{exp.from}</Moment> - {\r\n                    exp.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                        <Moment format='YYYY/MM/DD'>{exp.to}</Moment>\r\n                    )}\r\n            </td>\r\n            <td>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => deleteExperience(exp._id)}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Experience Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th>Position</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{experiences}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteExperience, getCurrentProfile })(Experience)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment'\r\nimport { Fragment } from 'react'\r\nimport { deleteEducation } from '../../actions/profile'\r\nimport './Education.css'\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td aria-label=\"School\">{edu.school}</td>\r\n            <td aria-label=\"Degree\">{edu.degree}</td>\r\n            <td aria-label=\"Years\">\r\n                <Moment format='YYYY/MM/DD'>{edu.from}</Moment> - {\r\n                    edu.to === null ? (\r\n                        'Now'\r\n                    ) : (\r\n                        <Moment format='YYYY/MM/DD'>{edu.to}</Moment>\r\n                    )}\r\n            </td>\r\n            <td>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => deleteEducation(edu._id)}\r\n                >\r\n                    Delete\r\n                </button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"my-2\">Education Credentials</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th>Degree</th>\r\n                        <th>Years</th>\r\n                        <th />\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{educations}</tbody>\r\n            </table>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteEducation })(Education)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile'\r\nimport PropTypes from 'prop-types'\r\nimport Spinner from '../layout/Spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport DashboardActions from './DashboardActions'\r\nimport Experience from './Experience'\r\nimport Education from './Education'\r\n\r\nconst Dashboard = ({\r\n    getCurrentProfile,\r\n    deleteAccount,\r\n    auth: { user },\r\n    profile: { profile, loading }\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n    }, [getCurrentProfile])\r\n\r\n    return loading && profile == null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n\r\n            <h1 className=\"large text-primary\">Dasbhoard</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fas-user\"></i>\r\n                Welcome, {user && user.name}\r\n            </p>\r\n\r\n            {profile !== null ? (\r\n                <Fragment>\r\n                    <DashboardActions />\r\n                    {!profile.experience.length ? (\r\n                        <h2 className=\"my-2\">No experience credentials ...</h2>\r\n                    ) : (\r\n                        <Experience experience={profile.experience} />\r\n                    )}\r\n\r\n                    {!profile.education.length ? (\r\n                        <h2 className=\"my-2\">No education credentials ...</h2>\r\n                    ) : (\r\n                        <Education education={profile.education} />\r\n                    )}\r\n\r\n\r\n                    <div className=\"my-2\">\r\n                        <button\r\n                            className=\"btn btn-danger\"\r\n                            onClick={deleteAccount}\r\n                        >\r\n                            <i className=\"fas fa-user-minus\"></i>\r\n                            {' '} Delete My Account\r\n                        </button>\r\n                    </div>\r\n                </Fragment>\r\n            ) : (\r\n                <Fragment>\r\n                    <p>You have not yet setup a profile, please add some info</p>\r\n                    <Link to='/create-profile' className=\"btn btn-primary my-1\">\r\n                        Create Profile\r\n                    </Link>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: { isAuthenticated, loading },\r\n    ...rest\r\n}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            !isAuthenticated && !loading ? (\r\n                <Redirect to='/login' />\r\n            ) : (\r\n                <Component {...props} />)}\r\n    />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setAlert } from '../../actions/alert'\r\nimport { register } from '../../actions/auth'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n\r\n    const { name, email, password, password2 } = formData\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (password !== password2) {\r\n            setAlert('Password do not match', 'danger', 5000)\r\n        } else {\r\n            register({ name, email, password })\r\n        }\r\n    }\r\n\r\n    //Redirect if registered\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign Up</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        // required\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        This site uses Gravatar so if you want a profile image, use a\r\n                        Gravatar email\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        // minLength=\"6\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        name=\"password2\"\r\n                        // minLength=\"6\"\r\n                        value={password2}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Already have an account ? <Link to=\"/login\">Sign In</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n    setAlert: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { setAlert, register }\r\n)(Register)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { email, password } = formData\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        login(email, password)\r\n    }\r\n\r\n    // Redirect if logged in\r\n    if (isAuthenticated) {\r\n        return <Redirect to=\"/dashboard\" />\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">Sign In</h1>\r\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        This site uses Gravatar so if you want a profile image, use a\r\n                        Gravatar email\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        minLength=\"6\"\r\n                        value={password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n            </form>\r\n            <p className=\"my-1\">\r\n                Don't have an account ? <Link to=\"/register\">Sign Up</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ProfileItem = ({ profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n}\r\n}) => {\r\n    return (\r\n        <div className=\"profile bg-light\">\r\n            <img src={avatar} alt=\"\" className=\"round-img\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status} {company && <span>at {company}</span>}</p>\r\n                <p className=\"my-1\">{location && <span>location: {location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\r\n                    View Profile\r\n                </Link>\r\n            </div>\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className=\"text-primary\">\r\n                        <i className=\"fas fa-check\"></i>\r\n                        {' '} {skill}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileItem\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Fragment } from 'react'\r\nimport Spinner from '../layout/Spinner'\r\nimport { getProfiles } from '../../actions/profile'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n\r\n    useEffect(() => {\r\n        getProfiles()\r\n    }, [getProfiles])\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <h1 className=\"large text-primary\">Developers</h1>\r\n                    <p className=\"lead\">\r\n                        <i className=\"fab fa-connectdevelop\"></i>\r\n                        {' '} Browse and connect with developers\r\n                    </p>\r\n                    <div className=\"profiles\">\r\n                        {profiles.length > 0 ? (\r\n                            profiles.map(profile => (\r\n                                <ProfileItem key={profile._id} profile={profile} />\r\n                            ))\r\n                        ) : (\r\n                            <h4>No profiles found...</h4>\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n            }\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileTop = ({ profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n} }) => {\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n            <img\r\n                className=\"round-img my-1\"\r\n                src={avatar}\r\n                alt=\"\"\r\n            />\r\n            <h1 className=\"large\">{name}</h1>\r\n            <p className=\"lead\">\r\n                {status} {company && <span> at {company}</span>}\r\n            </p>\r\n            <p>{location && <span>{location}</span>}</p>\r\n            <div className=\"icons my-1\">\r\n                {\r\n                    website && (\r\n                        <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fas fa-globe fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n                {\r\n                    social && social.twitter && (\r\n                        <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n                {\r\n                    social && social.facebook && (\r\n                        <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n                {\r\n                    social && social.linkedin && (\r\n                        <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n                {\r\n                    social && social.youtube && (\r\n                        <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n                {\r\n                    social && social.instagram && (\r\n                        <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                        </a>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileTop\r\n","import React, { Fragment } from 'react'\r\n\r\nconst ProfileAbout = ({\r\n    profile: {\r\n        bio,\r\n        skills,\r\n        user: { name }\r\n    }\r\n}) => {\r\n    return (\r\n        <div className=\"profile-about bg-light p-2\">\r\n            {bio && (\r\n                <Fragment>\r\n                    <h2 className=\"text-primary\">{name.trim().split(' ')[0]}s Bio</h2>\r\n                    <p>\r\n                        {bio}\r\n                    </p>\r\n                    <div className=\"line\"></div>\r\n                </Fragment>\r\n            )}\r\n\r\n\r\n            <h2 className=\"text-primary\">Skill Set</h2>\r\n            <div className=\"skills\">\r\n                {skills.map((skill, index) => (\r\n                    <div key={index} className=\"p-1\">\r\n                        <div>\r\n                            <i className=\"fas fa-check\"></i>\r\n                            {' '} {skill}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileAbout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileExperience = ({\r\n    experience: {\r\n        company,\r\n        title,\r\n        to,\r\n        from,\r\n        description\r\n    }\r\n}) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                <strong>Company: </strong> {company}\r\n            </p>\r\n\r\n            <p>\r\n                <strong>Years: </strong>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> -\r\n                {!to ? 'Now ' : <span> <Moment format='YYYY/MM/DD'>{to}</Moment></span>}\r\n            </p>\r\n            <p>\r\n                <strong>Position: </strong> {title}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment'\r\n\r\nconst ProfileEducation = ({\r\n    education: {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        to,\r\n        from,\r\n        description\r\n    }\r\n}) => {\r\n    return (\r\n        <div>\r\n            <p>\r\n                <strong>School or Bootcamp: </strong> {school}\r\n            </p>\r\n            <p>\r\n                <strong>Years: </strong>\r\n                <Moment format='YYYY/MM/DD'>{from}</Moment> -\r\n                {!to ? 'Now' : <span> <Moment format='YYYY/MM/DD'>{to}</Moment></span>}\r\n            </p>\r\n            <p>\r\n                <strong>Degree: </strong> {degree}\r\n            </p>\r\n            <p>\r\n                <strong>Field Of Study: </strong> {fieldofstudy}\r\n            </p>\r\n            <p>\r\n                <strong>Description: </strong> {description}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileEducation\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getGithubRepos } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username)\r\n    }, [getGithubRepos])\r\n\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">Github Repos</h2>\r\n            {repos === null ? (\r\n                <Spinner />\r\n            ) : (\r\n                repos.map(repo => (\r\n                    <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n                        <div>\r\n                            <h4>\r\n                                <a\r\n                                    href={repo.html_url}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    {repo.name}\r\n                                </a>\r\n                            </h4>\r\n                            <p>{repo.description}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li className=\"badge badge-primary\">\r\n                                    Stars: {repo.stargazers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-dark\">\r\n                                    Watchers: {repo.watchers_count}\r\n                                </li>\r\n                                <li className=\"badge badge-light\">\r\n                                    Forks: {repo.forks_count}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos: PropTypes.func.isRequired,\r\n    repos: PropTypes.array.isRequired,\r\n    username: PropTypes.string.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getProfileById } from '../../actions/profile'\r\nimport Spinner from '../layout/Spinner'\r\nimport { Link } from 'react-router-dom'\r\nimport ProfileTop from './ProfileTop'\r\nimport ProfileAbout from './ProfileAbout'\r\nimport ProfileExperience from './ProfileExperience'\r\nimport ProfileEducation from './ProfileEducation'\r\nimport ProfileGithub from './ProfileGithub'\r\n\r\nconst Profile = ({\r\n    match,\r\n    getProfileById,\r\n    profile: { profile, loading },\r\n    auth\r\n}) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id)\r\n    }, [getProfileById, match.params.id])\r\n\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                <Spinner />\r\n            ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className=\"btn btn-light\">\r\n                        Back To Profiles\r\n                    </Link>\r\n                    {auth.isAuthenticated &&\r\n                        auth.loading === false &&\r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className=\"btn btn-dark\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        )}\r\n                    <div className=\"profile-grid my-1\">\r\n                        <ProfileTop profile={profile} />\r\n                        <ProfileAbout profile={profile} />\r\n                        <div className=\"profile-exp bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Experience</h2>\r\n                            {profile.experience.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.experience.map(exp => (\r\n                                        <ProfileExperience key={exp._id} experience={exp} />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No experience credentials</h4>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"profile-edu bg-white p-2\">\r\n                            <h2 className=\"text-primary\">Education</h2>\r\n                            {profile.education.length > 0 ? (\r\n                                <Fragment>\r\n                                    {profile.education.map(edu => (\r\n                                        <ProfileEducation key={edu._id} education={edu} />\r\n                                    ))}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <h4>No education credentials</h4>\r\n                            )}\r\n                        </div>\r\n\r\n                        {profile.githubusername && (\r\n                            <ProfileGithub username={profile.githubusername} />\r\n                        )}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n            }\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile)\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile } from '../../actions/profile'\r\n\r\nconst inititalState = {\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n}\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formData, setFormData] = useState(inititalState)\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        createProfile(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i>\r\n                Let's get some information to make your profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={handleChange}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        name=\"website\"\r\n                        value={website}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        City & state suggested (eg. Boston, MA)\r\n                        </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Skills\"\r\n                        name=\"skills\"\r\n                        value={skills}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Please use comma separated values (eg.HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        placeholder=\"A short bio of yourself\"\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        onChange={handleChange}\r\n                    >\r\n                    </textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Twitter URL\"\r\n                                name=\"twitter\"\r\n                                value={twitter}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Facebook URL\"\r\n                                name=\"facebook\"\r\n                                value={facebook}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"YouTube URL\"\r\n                                name=\"youtube\"\r\n                                value={youtube}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Linkedin URL\"\r\n                                name=\"linkedin\"\r\n                                value={linkedin}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Instagram URL\"\r\n                                name=\"instagram\"\r\n                                value={instagram}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile))\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile'\r\n\r\nconst inititalState = {\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: ''\r\n}\r\n\r\nconst EditProfile = ({\r\n    profile: { profile, loading },\r\n    createProfile,\r\n    getCurrentProfile,\r\n    history\r\n}) => {\r\n\r\n    const [formData, setFormData] = useState(inititalState)\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formData\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getCurrentProfile()\r\n\r\n        setFormData({\r\n            company: loading || !profile.company ? '' : profile.company,\r\n            website: loading || !profile.website ? '' : profile.website,\r\n            location: loading || !profile.location ? '' : profile.location,\r\n            status: loading || !profile.status ? '' : profile.status,\r\n            skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n            githubusername:\r\n                loading || !profile.githubusername ? '' : profile.githubusername,\r\n            bio: loading || !profile.bio ? '' : profile.bio,\r\n            twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n            facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n            instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n            youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n        })\r\n    }, [loading])\r\n\r\n    console.log('PROFILE', profile)\r\n    console.log('FOM_DAATA', formData)\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        createProfile(formData, history, true)\r\n    }\r\n\r\n    // console.log('DATA', formData)\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Edit Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i>\r\n                Let's get some information to make your profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={handleChange}>\r\n                        <option value=\"0\">* Select Professional Status</option>\r\n                        <option value=\"Developer\">Developer</option>\r\n                        <option value=\"Junior Developer\">Junior Developer</option>\r\n                        <option value=\"Senior Developer\">Senior Developer</option>\r\n                        <option value=\"Manager\">Manager</option>\r\n                        <option value=\"Student or Learning\">Student or Learning</option>\r\n                        <option value=\"Instructor\">Instructor or Teacher</option>\r\n                        <option value=\"Intern\">Intern</option>\r\n                        <option value=\"Other\">Other</option>\r\n                    </select>\r\n                    <small className=\"form-text\">\r\n                        Give us an idea of where you are at in your career\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Company\"\r\n                        name=\"company\"\r\n                        value={company}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own company or one you work for\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Website\"\r\n                        name=\"website\"\r\n                        value={website}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        City & state suggested (eg. Boston, MA)\r\n                        </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Skills\"\r\n                        name=\"skills\"\r\n                        value={skills}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        Please use comma separated values (eg.HTML,CSS,JavaScript,PHP)\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        name=\"githubusername\"\r\n                        value={githubusername}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <small className=\"form-text\">\r\n                        If you want your latest repos and a Github link, include your username\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        placeholder=\"A short bio of yourself\"\r\n                        name=\"bio\"\r\n                        value={bio}\r\n                        onChange={handleChange}\r\n                    >\r\n                    </textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button\r\n                        onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n                        type=\"button\"\r\n                        className=\"btn btn-light\"\r\n                    >\r\n                        Add Social Network Links\r\n                    </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && (\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Twitter URL\"\r\n                                name=\"twitter\"\r\n                                value={twitter}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Facebook URL\"\r\n                                name=\"facebook\"\r\n                                value={facebook}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"YouTube URL\"\r\n                                name=\"youtube\"\r\n                                value={youtube}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Linkedin URL\"\r\n                                name=\"linkedin\"\r\n                                value={linkedin}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Instagram URL\"\r\n                                name=\"instagram\"\r\n                                value={instagram}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </div>\r\n                    </Fragment>\r\n                )}\r\n\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>\r\n                    Go Back\r\n                </Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    getCurrentProfile: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(withRouter(EditProfile))\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addExperience } from '../../actions/profile'\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const {\r\n        company,\r\n        title,\r\n        location,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        addExperience(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <h1 className=\"large text-primary\">\r\n                Add An Experience\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\"></i>\r\n                {' '} Add any developer/programming positions that you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Position\"\r\n                        name=\"title\"\r\n                        required\r\n                        value={title}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Company\"\r\n                        name=\"company\"\r\n                        required\r\n                        value={company}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\" placeholder=\"Location\"\r\n                        name=\"location\"\r\n                        value={location}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"from\"\r\n                        value={from}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"current\"\r\n                            value={current}\r\n                            checked={current}\r\n                            onChange={() => {\r\n                                setFormData({ ...formData, current: !current })\r\n                                toggleDisabled(!toDateDisabled)\r\n                            }}\r\n                        />\r\n                        {' '} Current Job\r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"to\"\r\n                        value={to}\r\n                        onChange={handleChange}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Job Description\"\r\n                        value={description}\r\n                        onChange={handleChange}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience))\r\n","import React, { Fragment, useState } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { addEducation } from '../../actions/profile'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    })\r\n\r\n    const {\r\n        school,\r\n        degree,\r\n        fieldofstudy,\r\n        from,\r\n        to,\r\n        current,\r\n        description\r\n    } = formData\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        addEducation(formData, history)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <h1 className=\"large text-primary\">\r\n                Add Education\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-code-branch\"></i>\r\n                {' '} Add any school or bootcamp that you have attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* School or Bootcamp\"\r\n                        name=\"school\"\r\n                        required\r\n                        value={school}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"* Degree or Certificate\"\r\n                        name=\"degree\"\r\n                        required\r\n                        value={degree}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Field of Study\"\r\n                        name=\"fieldofstudy\"\r\n                        value={fieldofstudy}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>From Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"from\"\r\n                        value={from}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <p>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"current\"\r\n                            value={current}\r\n                            checked={current}\r\n                            onChange={() => {\r\n                                setFormData({ ...formData, current: !current })\r\n                                toggleDisabled(!toDateDisabled)\r\n                            }}\r\n                        />\r\n                        {' '} Current School\r\n                    </p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <h4>To Date</h4>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"to\"\r\n                        value={to}\r\n                        onChange={handleChange}\r\n                        disabled={toDateDisabled ? 'disabled' : ''}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        name=\"description\"\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Program Description\"\r\n                        value={description}\r\n                        onChange={handleChange}\r\n                    ></textarea>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation))\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, deletePost, removeLike } from '../../actions/post'\r\n\r\nconst PostItem = ({\r\n    auth,\r\n    addLike,\r\n    removeLike,\r\n    deletePost,\r\n    post: {\r\n        _id, text, name, avatar,\r\n        user, likes, comments, date\r\n    },\r\n    showActions\r\n}) => {\r\n\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n            <div>\r\n                <Link to='/profile'>\r\n                    <img\r\n                        className=\"round-img\"\r\n                        src={avatar}\r\n                        alt=\"Photo\"\r\n                    />\r\n                    <h4>{name}</h4>\r\n                </Link>\r\n            </div>\r\n            <div>\r\n                <p className=\"my-1\">\r\n                    {text}\r\n                </p>\r\n                <p className=\"post-date\">\r\n                    <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n                </p>\r\n\r\n                {showActions && (\r\n                    <Fragment>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light\"\r\n                            onClick={() => addLike(_id)}\r\n                        >\r\n                            <i className=\"fas fa-thumbs-up\" /> {' '}\r\n                            {likes.length > 0 && (\r\n                                <span>{likes.length}</span>\r\n                            )}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-light\"\r\n                            onClick={() => removeLike(_id)}\r\n                        >\r\n                            <i className=\"fas fa-thumbs-down\" />\r\n                        </button>\r\n                        <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n                            Discussion {comments.length > 0 && (\r\n                                <span className='comment-count'>{comments.length}</span>\r\n                            )}\r\n                        </Link>\r\n                        {!auth.loading && user === auth.user._id && (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => deletePost(_id)}\r\n                            >\r\n                                <i className=\"fas fa-times\" />\r\n                                {' '} Delete\r\n                            </button>\r\n                        )}\r\n                    </Fragment>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n    showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem)\r\n","import axios from 'axios'\r\nimport { setAlert } from './alert'\r\nimport { ADD_COMMENT, ADD_POST, DELETE_POST, GET_POST, GET_POSTS, POST_ERROR, REMOVE_COMMENT, UPDATE_LIKES } from './types'\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/posts')\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add post\r\nexport const addPost = (formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post('/api/posts', formData, config)\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Post Created', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Add like\r\nexport const addLike = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Remove Like\r\nexport const removeLike = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${id}`)\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: { id, likes: res.data }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete Post\r\nexport const deletePost = (id) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        })\r\n\r\n        dispatch(setAlert('Post Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Get post\r\nexport const getPost = (id) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/posts/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Add Comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`, formData, config)\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch(setAlert('Comment Added', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete Comment\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/comment/${postId}/${commentId}`,)\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n            payload: commentId\r\n        })\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addPost } from '../../actions/post'\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        addPost({ text })\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div class=\"post-form\">\r\n            <div class=\"bg-primary p\">\r\n                <h3>Say Something...</h3>\r\n            </div>\r\n            <form class=\"form my-1\" onSubmit={handleSubmit}>\r\n                <textarea\r\n                    name=\"text\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Create a post\"\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { getPosts } from '../../actions/post'\r\nimport Spinner from '../layout/Spinner'\r\nimport { Fragment } from 'react'\r\nimport PostItem from './PostItem'\r\nimport PostForm from './PostForm'\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts()\r\n    }, [getPosts])\r\n\r\n    return loading ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment >\r\n            <h1 className=\"large text-primary\">Posts</h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i>\r\n                {' '} Welcome to the community\r\n            </p>\r\n            <PostForm />\r\n            <div className=\"posts\">\r\n                {posts.map(post => (\r\n                    <PostItem key={post._id} post={post} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts)\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { addComment } from '../../actions/post'\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n    const [text, setText] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        addComment(postId, { text })\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <div class=\"post-form\">\r\n            <div class=\"bg-primary p\">\r\n                <h3>Leave a Comment</h3>\r\n            </div>\r\n            <form class=\"form my-1\" onSubmit={handleSubmit}>\r\n                <textarea\r\n                    name=\"text\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Create a post\"\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    required\r\n                ></textarea>\r\n                <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired,\r\n    postId: PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Moment from 'react-moment'\r\nimport { deleteComment } from '../../actions/post'\r\n\r\nconst CommentItem = ({\r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    auth,\r\n    deleteComment\r\n}) =>\r\n    <div class=\"post bg-white p-1 my-1\">\r\n        <div>\r\n            <Link to={`/profile/${user}`}>\r\n                <img\r\n                    class=\"round-img\"\r\n                    src={avatar}\r\n                    alt=\"Photo\"\r\n                />\r\n                <h4>{name}</h4>\r\n            </Link>\r\n        </div>\r\n        <div>\r\n            <p class=\"my-1\">\r\n                {text}\r\n            </p>\r\n            <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n            {!auth.loading && user === auth.user._id && (\r\n                <button\r\n                    onClick={() => deleteComment(postId, _id)}\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n            )}\r\n        </div>\r\n    </div>\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    comment: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem)\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getPost } from '../../actions/post'\r\nimport Spinner from '../layout/Spinner'\r\nimport PostItem from '../posts/PostItem'\r\nimport { Link } from 'react-router-dom'\r\nimport CommentForm from './CommentForm'\r\nimport CommentItem from './CommentItem'\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id)\r\n    }, [getPost])\r\n\r\n    return loading || post === null ? (\r\n        <Spinner />\r\n    ) : (\r\n        <Fragment>\r\n            <Link to='/posts' className=\"btn\">\r\n                Back To Posts\r\n            </Link>\r\n            <PostItem post={post} showActions={false} />\r\n            <CommentForm postId={post._id} />\r\n            <div className=\"comments\">\r\n                {post.comments.map(comment => (\r\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                ))}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post)\r\n","import React, { Fragment } from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Fragment >\r\n            <h1 className=\"large text-primary\">\r\n                <i className=\"fas fa-exclamation-triangle\"></i>\r\n                {' '} Page Not Found\r\n            </h1>\r\n            <p className=\"large\">Sorry, this page does not exist</p>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport Dashboard from '../components/dashboard/Dashboard'\r\nimport PrivateRoute from './PrivateRoute'\r\nimport Register from '../components/auth/Register'\r\nimport Login from '../components/auth/Login'\r\nimport Profiles from '../components/profiles/Profiles'\r\nimport Profile from '../components/profile/Profile'\r\nimport CreateProfile from '../components/profile-form/CreateProfile'\r\nimport EditProfile from '../components/profile-form/EditProfile'\r\nimport AddExperience from '../components/profile-form/AddExperience'\r\nimport AddEducation from '../components/profile-form/AddEducation'\r\nimport Posts from '../components/posts/Posts'\r\nimport Post from '../components/post/Post'\r\nimport NotFound from '../components/layout/NotFound'\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <section className='container'>\r\n            <Switch>\r\n                <Route exact path='/register' component={Register} />\r\n                <Route exact path='/login' component={Login} />\r\n                <Route exact path='/profiles' component={Profiles} />\r\n                <Route exact path='/profile/:id' component={Profile} />\r\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n                <PrivateRoute exact path='/create-profile' component={CreateProfile} />\r\n                <PrivateRoute exact path='/edit-profile' component={EditProfile} />\r\n                <PrivateRoute exact path='/add-experience' component={AddExperience} />\r\n                <PrivateRoute exact path='/add-education' component={AddEducation} />\r\n                <PrivateRoute exact path='/posts' component={Posts} />\r\n                <PrivateRoute exact path='/posts/:id' component={Post} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Landing from './components/layout/Landing';\r\nimport Navbar from './components/layout/Navbar';\r\nimport './App.css';\r\n// Redux \r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Alert from './components/layout/Alert';\r\nimport { loadUser } from './actions/auth';\r\nimport setAuthToken from './utills/setAuthToken';\r\nimport Routes from './routing/Routes';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token)\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser())\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Alert />\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}